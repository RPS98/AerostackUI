TODO:
15/03 -> Confirm Mission Controller
16/03 -> Mission controller functionality (Center mission, Reload mission).
         Add mission layers info / Uav info
17/03 -> Save misssion and Load mission

20/03 -> Basic swarming features
22/03 -> Start, stop and end mission messages. Mission / UAV colors. Layer tiles and order
23/03 -> Preparar demo
24/03 -> Add config file

27/03 -> Debug project
28/03 -> Debug project
29/03 -> Documentation
30/03 -> Documentation
31/03 -> GitHub




{
    'Key0' = 'Value0'
    'Key1': 
        {
            'Key1.1': 'Value1.1',
            'Key1.2': 'Value1.2',
            'Key1.3': 'Value1.3'
        }
    'Key2': 
        {
            'Key2.1': 
                {
                    'Key2.1.1': 'Value2.1.1',
                    'Key2.1.2': 'Value2.1.2'
                }
            'Key2.2': 'Value2.2'
        }
}

- Opci贸n 1:

[Key0, Value0]
[Key1, Key1.1, Value1.1]
[''  , Key1.2, Value1.2]
[''  , Key1.3, Value1.3]
[Key2, Key2.1, Key2.1.1, Value2.1.1]
[''  , ''    , Key2.1.2, Value2.1.2]
[''  , Key2.2, Value2.2]

- Opci贸n 2:

[Key0, Value0, ''      , ''        ]
[Key1, Key1.1, Value1.1, ''        ]
[''  , Key1.2, Value1.2, ''        ]
[''  , Key1.3, Value1.3, ''        ]
[Key2, Key2.1, Key2.1.1, Value2.1.1]
[''  , ''    , Key2.1.2, Value2.1.2]
[''  , Key2.2, Value2.2], ''       ]



['Id', dict['id']],
['Info', 'Connected',       true], // dict['state']['connected']
['',     'Armed',           dict['state']['armed']],
['',     'Offboard',        dict['state']['offboard']],
['',     'State',           dict['state']['state']],
['',     'Yaw mode',        dict['state']['yaw_mode']],
['',     'Control mode',    dict['state']['control_mode']],
['',     'Reference frame', dict['state']['reference_frame']],
['Pose', 'lat',     Utils.round(dict['pose']['lat']   , 5)],
['',     'lng',     Utils.round(dict['pose']['lng']   , 5)],
['',      'height', Utils.round(dict['pose']['height'], 2)],
['',      'yaw',    Utils.round(dict['pose']['yaw']   , 2)],





let uavInfo = 
{
    'Id': 'Uav1',
    'Info': 
        {
            'Connected': true,
            'Armed': true,
            'Offboard': false,
        },
    'State':
        {
            'Position':
                {
                    'x': 0,
                    'y': 0,
                    'z': 0,
                },
            'Orientation':
                {
                    'yaw': 0,
                    'pitch': 0,
                    'roll': 0,
                },
            'State': 'hover',
        }
}

// Opci贸n 1:

['Id'   , 'Uav1']
['Info' , 'Connected'  , true]
[''     , 'Armed'      , true]
[''     , 'Offboard'   , false]
['State', 'Position'   , 'x'    , 0]
[''     , ''           , 'y'    , 0]
[''     , ''           , 'z'    , 0]
[''     , 'Orientation', 'yaw'  , 0]
[''     , ''           , 'pitch', 0]
[''     , ''           , 'roll' , 0]
[''     , 'State'      , 'hover']

// Opci贸n 2:

['Id'   , 'Uav1'       , ''     , '']    
['Info' , 'Connected'  , true   , '']
[''     , 'Armed'      , true   , '']
[''     , 'Offboard'   , false  , '']
['State', 'Position'   , 'x'    , 0]
[''     , ''           , 'y'    , 0]
[''     , ''           , 'z'    , 0]
[''     , 'Orientation', 'yaw'  , 0]
[''     , ''           , 'pitch', 0]
[''     , ''           , 'roll' , 0]
[''     , 'State'      , 'hover', '']


















#!/bin/bash

#https://github.com/aerostack2-developers/PX4-Autopilot.git


PX4_FOLDER="${AEROSTACK2_WORKSPACE}/src/thirdparty/PX4-Autopilot"

# WORLD_FILE="${AEROSTACK_PROJECT}/configs/gazebo/worlds/empty.world"
WORLD_FILE="${AEROSTACK2_PROJECTS}planta_simulation/configs/gazebo/worlds/planta.world"

UAV_NAME="iris"
MODEL_FOLDER="${AEROSTACK2_PROJECTS}planta_simulation/configs/gazebo/models"

sed -i -r "s/(<namespace>).+[[:alnum:]].+(<\/namespace>)/\1$AEROSTACK2_SIMULATION_DRONE_ID\2/" "$MODEL_FOLDER/$UAV_NAME/iris.sdf"

cp "$MODEL_FOLDER/$UAV_NAME/iris.sdf" "$MODEL_FOLDER/$UAV_NAME/iris.sdf.jinja"
cp "$MODEL_FOLDER/$UAV_NAME/iris.sdf" "$MODEL_FOLDER/$UAV_NAME/iris.sdf.last_generated"

# cd $PX4_FOLDER &&
#     make px4_sitl_rtps gazebo

# export PX4_NO_FOLLOW_MODE=1

export PX4_HOME_LAT=28.143993735855286
export PX4_HOME_LON=-16.50324122923412
export PX4_HOME_ALT=0

export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$PX4_FOLDER:$PX4_FOLDER/Tools/sitl_gazebo
export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:$MODEL_FOLDER
export PX4_SITL_WORLD=$WORLD_FILE
export GAZEBO_PLUGIN_PATH=$PX4_FOLDER/build/px4_sitl_rtps/build_gazebo
# source $PX4_FOLDER/build/px4_sitl_rtps/build_gazebo/setup.sh


$PX4_FOLDER/Tools/sitl_run.sh "$PX4_FOLDER/build/px4_sitl_rtps/bin/px4" none gazebo none $WORLD_FILE $PX4_FOLDER $PX4_FOLDER/build/px4_sitl_rtps


